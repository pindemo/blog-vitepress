import{_ as a,c as i,a5 as n,o as e}from"./chunks/framework.G9dqKrrn.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"知识库/git/git创建分支提交.md","filePath":"知识库/git/git创建分支提交.md","lastUpdated":1728441503000}'),t={name:"知识库/git/git创建分支提交.md"};function p(l,s,h,k,d,r){return e(),i("div",null,s[0]||(s[0]=[n(`<h2 id="git创建分支并提交" tabindex="-1">git创建分支并提交 <a class="header-anchor" href="#git创建分支并提交" aria-label="Permalink to &quot;git创建分支并提交&quot;">​</a></h2><h3 id="_1、-创建分支" tabindex="-1">1、 创建<a href="https://so.csdn.net/so/search?q=%E5%88%86%E6%94%AF&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">分支</a> <a class="header-anchor" href="#_1、-创建分支" aria-label="Permalink to &quot;1、 创建[分支](https://so.csdn.net/so/search?q=分支&amp;spm=1001.2101.3001.7020)&quot;">​</a></h3><p>​ 在 Git 中，分支是项目开发的不同线路，它们允许团队在不影响主线（主分支）的情况下进行并行开发。创建分支的命令如下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建一个新分支</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new-feature</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换到新分支</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new-feature</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者使用以下命令创建并切换到新分支</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># git checkout -b new-feature</span></span></code></pre></div><blockquote><p>以上命令创建了一个名为 <code>new-feature</code> 的新分支，并将工作目录切换到该分支。</p></blockquote><h3 id="_2、提交更改" tabindex="-1">2、提交更改 <a class="header-anchor" href="#_2、提交更改" aria-label="Permalink to &quot;2、提交更改&quot;">​</a></h3><p>​ 在新分支上进行工作后，需要将更改提交到版本控制系统。以下是提交更改的基本命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加所有更改到暂存区</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 提交更改到本地仓库</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Add new feature&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 推送更改到远程仓库</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new-feature</span></span></code></pre></div><blockquote><p>上述命令将更改添加到暂存区，然后提交到本地仓库，并最后推送到远程仓库。</p></blockquote><h3 id="_3、合并主分支" tabindex="-1">3、合并主分支 <a class="header-anchor" href="#_3、合并主分支" aria-label="Permalink to &quot;3、合并主分支&quot;">​</a></h3><p>​ 一旦在新分支上完成了工作，通常需要将其合并回主分支。使用以下命令合并分支：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换回主分支</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 合并新分支到主分支</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new-feature</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 推送主分支到远程仓库</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div><blockquote><p>上述命令将工作目录切换回主分支，然后将 <code>new-feature</code> 分支合并到主分支，并将合并后的更改推送到远程仓库。</p></blockquote><h3 id="_4、解决冲突" tabindex="-1">4、解决冲突 <a class="header-anchor" href="#_4、解决冲突" aria-label="Permalink to &quot;4、解决冲突&quot;">​</a></h3><p>​ 在分支合并过程中，如果两个分支都修改了同一部分的代码，可能会发生冲突。解决冲突的步骤如下：</p><p>​ 1、Git 会标记冲突的文件。手动编辑文件，解决冲突。</p><p>​ 2、添加解决冲突后的文件到暂存区：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">conflicted-fil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>​ 3、提交解决冲突后的更改：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Resolve merge conflict&quot;</span></span></code></pre></div><p>​ 4、继续合并：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new-feature</span></span></code></pre></div><h3 id="_5、删除分支" tabindex="-1">5、删除分支 <a class="header-anchor" href="#_5、删除分支" aria-label="Permalink to &quot;5、删除分支&quot;">​</a></h3><p>​ 完成分支的合并后，可以删除不再需要的分支：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除本地分支</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new-feature</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除远程分支</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --delete</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new-feature</span></span></code></pre></div>`,25)]))}const o=a(t,[["render",p]]);export{g as __pageData,o as default};
