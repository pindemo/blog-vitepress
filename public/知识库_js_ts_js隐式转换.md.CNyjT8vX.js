import{_ as t,c as s,j as e,a as l,o as n}from"./chunks/framework.bh9iDcjP.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"知识库/js/ts/js隐式转换.md","filePath":"知识库/js/ts/js隐式转换.md","lastUpdated":1726194331000}'),o={name:"知识库/js/ts/js隐式转换.md"};function r(i,a,d,c,j,u){return n(),s("div",null,a[0]||(a[0]=[e("h2",{id:"js隐式转换",tabindex:"-1"},[l("js隐式转换 "),e("a",{class:"header-anchor",href:"#js隐式转换","aria-label":'Permalink to "js隐式转换"'},"​")],-1),e("ul",null,[e("li",null,"字符串+任意类型都转为字符串连接"),e("li",null,"boolean、null、undefined+任意类型，先转换数字，然后再进行数字运算，字符串类型除外，因为字符串类型优先级最高"),e("li",null,"{}+任意类型，{}固定变成[object Object]。注意：直接使用{}+任意类型，{}会被当成代码块执行，你可以声明变量={}，不然会出现以下奇怪的结果：{}+1=1，{}+[]=0，{}+['有']=NaN"),e("li",null,"[]+任意类型，都会先转成字符串，转换规则是根据数组每一项按上面规则转换后join(',')，然后再与任何类型进行字符串拼接")],-1)]))}const f=t(o,[["render",r]]);export{p as __pageData,f as default};
